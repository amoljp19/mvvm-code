apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.softaai.mvvmcode"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debuge{
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}



tasks.withType(Test) {
    enabled = System.getProperty("java.specification.version") != "9"
//    append = true
    jacoco.includeNoLocationClasses = true
    //jacoco.excludes = ['jdk.internal.*']
}

jacoco {
    toolVersion = "0.8.3"
}

// TODO: Setup jacoco report format. We need xml for Sonarqube

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-beta01'
    implementation 'com.google.android.material:material:1.0.0-beta01'

    implementation "android.arch.lifecycle:extensions:1.1.0"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.0"


    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@jar'  // To use Glide with OkHttp

    // Retrofit with OkHttp and Gson
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'de.hdodenhof:circleimageview:3.0.0'


    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.15'

    implementation 'com.google.dagger:dagger:2.14.1'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.14.1'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.21.0'

    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

sonarqube {
    properties {
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-28/android.jar"/* + ", build/intermediates/exploded-aar*//**//*classes.jar"*/

        property "sonar.projectKey", "MvvmCode"
        property "sonar.projectName", "MvvmCode"
        property "sonar.projectVersion", "1.0"
        property "sonar.exclusions", "robospice/**/*"
        property "sonar.host.url", "http://192.168.0.1:9000" // TODO: - Setup your Sonarqube server address
        property "sonar.login", "2c65a11f523902700249d65fcafd6591de9a2287"
        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/app_classes/debug"
        property "sonar.libraries", libraries
        property "sonar.tests", "src/test/java, src/androidTest/java"
        property "sonar.java.test.binaries", "build/intermediates/app_classes/debug"
        property "sonar.java.test.libraries", libraries
        property "sonar.jacoco.reportPaths", "build/jacoco/testDebugUnitTest.exec"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPaths", "build/test-results/debug"
        property "sonar.android.lint.report", "build/outputs/lint-results"
    }

}
